name: Recommendation with simple vectorisation plus a KNN
task: recommendation
model: vector-KNN

# This model requires the dataset in XMI format dumped to disk
dataset:
  format: xmi

hyper:
  context_type: "Can be full or simple"

transform:
  - type: composite
    only: train
    steps:
      - type: docker
        folder: filter-dataset/
        run: java -cp /java/target/filter-dataset-1.0-SNAPSHOT-jar-with-dependencies.jar org.ml2.Main -r {root} -maxpkg 1 -minclasses 2 -maxclasses 15
      - type: docker
        folder: context-generator/
        run: java -cp /java/target/knn-context-generator-1.0-SNAPSHOT-jar-with-dependencies.jar org.ml2.Main -r {root} -t feature -c full
      - type: vectorize-text
        strategy: glove
        columns: [owner, context]
        separator: ' '
  - type: composite
    only: test
    steps:
      - type: docker
        folder: filter-dataset/
        run: java -cp /java/target/filter-dataset-1.0-SNAPSHOT-jar-with-dependencies.jar org.ml2.Main -r {root} -maxpkg 1 -minclasses 2 -maxclasses 15
      - type: docker
        folder: prepare-test-set/
        run: java -cp /java/target/TestSetExtractor-1.0-SNAPSHOT-jar-with-dependencies.jar org.ml2.Main -r {root} -t attribute
      - type: docker
        folder: context-generator/
        run: java -cp /java/target/knn-context-generator-1.0-SNAPSHOT-jar-with-dependencies.jar org.ml2.Main -r {root} -t feature -c full
      - type: vectorize-text
        strategy: glove
        columns: [owner, context]
        separator: ' '

#transform:
#  - type: docker
#    folder: context-generator/
#    run: java -cp /java/target/knn-context-generator-1.0-SNAPSHOT-jar-with-dependencies.jar org.ml2.Main -r {root} -t attribute
#    only: train
#  - type: composite
#    only: test
#    steps:
#      - type: docker
#        folder: prepare-test-set/
#        run: java -cp /java/target/TestSetExtractor-1.0-SNAPSHOT-jar-with-dependencies.jar org.ml2.Main -r {root} -t attribute
#      - type: docker
#        folder: context-generator/
#        run: java -cp /java/target/knn-context-generator-1.0-SNAPSHOT-jar-with-dependencies.jar org.ml2.Main -r {root} -t attribute

environment:
  python: venv
  more_files: ['knn.py']
  train: model.py --stage train --root {root} --input {input} --hyper {hyper}
  test:  model.py --stage test  --root {root} --input {input}